[ { "title": "Rust 中的闭包递归与 Y 组合子", "url": "/posts/rust_closure_and_y/", "categories": "杂记, Rust", "tags": "rust, closure", "date": "2021-06-07 23:45:52 +0800", "snippet": "λ 函数递归λ 函数也即匿名函数，在 Rust 中体现为闭包。在一些语言中，你可以简单地在 λ 函数内调用自己实现递归，例如在 JavaScript 中实现一个阶乘：fact = n =&amp;gt; { if (n == 0) return 1; else return n * fact(n - 1);}console.log(fact(5)) // 输出120但是当你想在 Rust 中复现这一操作时：let fact = |n| match n { 0 =&amp;gt; 1, _ =&amp;gt; n * fact(n - 1),};println!(&..." }, { "title": "Rust 中函数与闭包与 Fn Traits 探讨", "url": "/posts/rust_fn_traits/", "categories": "杂记, Rust", "tags": "rust, closure, trait", "date": "2021-04-24 20:31:52 +0800", "snippet": "闭包闭包，或者又名匿名函数，lambda 函数，它在官方文档中被定义为可以捕获环境的匿名函数。通常，闭包的定义具有以下的形式：let closure_name = |arg1: type1, arg2: type2| -&amp;gt; return_type { // closure body}在闭包定义中，可以省略参数的类型和返回值类型，Rust 将通过第一次调用该闭包时的参数类型来决定闭包的参数类型以及返回值类型，甚至，如果闭包体只有一句代码时，可以省略花括号不写：let just_print = |num| println!(&quot;{}&quot;, num);jus..." }, { "title": "我的 Chrome 上安装的插件一览及介绍", "url": "/posts/chrome_extensions/", "categories": "推荐, Chrome", "tags": "chrome", "date": "2021-04-20 23:08:01 +0800", "snippet": "想必不管是谁，在网上冲浪这么多年，多多少少都有听说过 Chrome 浏览器，即使没有用过 Chrome，也至少用过基于 Chromium 内核的浏览器，例如：QQ 浏览器，360 浏览器，以及已经叛变的 Microsoft Edge。很多人都知道 Chrome 很好用，但是，我想说的是：带插件的 Chrome 更好用。用 Chrome 不装插件，简直就是开空调不关窗。下面介绍一下我自己的 Chrome 上安装的插件。Adblock Plus广告拦截器。没什么好说的，基本上属于必装插件，有了它，你才能看得下去国内那些充斥着广告的网站。除了默认屏蔽规则外，你也可以手动添加屏蔽规则来拦截一些你..." }, { "title": "Markdown 一些奇技淫巧", "url": "/posts/markdown/", "categories": "教程, Markdown", "tags": "markdown, 教程", "date": "2021-04-15 22:00:31 +0800", "snippet": "列表内分段举个例子，假如我们想要在列表中换行，最简单的办法就是双空格法：* 第一项第一行 &amp;lt;!-- 注意这里有两个空格 --&amp;gt;第一项第二行* 第二项第一行 &amp;lt;!-- 注意这里有两个空格 --&amp;gt;```一段代码``` &amp;lt;!-- 注意这里有两个空格 --&amp;gt;第二项第二行效果： 第一项第一行第一项第二行 第二项第一行 一段代码 第二项第二行 但是这种做法有点太暴力了，我更倾向于使用下面的方法：* 第一项第一行 第一项第二行* 第二项第一行 ``` 一段代码 ``` 第二项第..." }, { "title": "使用 Valine 替换 Chirpy 主题中的 Disqus 评论系统", "url": "/posts/use_valine/", "categories": "教程, 网站", "tags": "jekyll, 教程, 网站, valine", "date": "2021-03-21 00:21:08 +0800", "snippet": "前置工作根据 Valine 官方教程注册 LeanCloud 以获取 APP ID 和 APP Key。注：注册国内版 LeanCloud 需要绑定已备案的域名，而注册国际版 LeanCloud 则不需要。如果是 fork 主题搭建博客，修改对应文件即可。如果是使用 theme 或者 remote_theme，则需要下载对应的文件放在相应目录后再修改。配置 _config.yml找到 disqus 数据段并删除：disqus: comments: false shortname: &#39;&#39;增加 valine 的数据段：valine: comments: true ..." }, { "title": "头像出处", "url": "/posts/avatar/", "categories": "资源, 图片", "tags": "头像, pixiv, 图片", "date": "2021-03-19 23:37:42 +0800", "snippet": "由画师 シガタケ 为 井上⊿（即 Grand Thaw (2002~2013) / Rigël Theatre(2013~)）的音乐专辑 Fyra Varlden 中的曲子 Grad Erlija 所绘制的印象绘（Image illustration），Pixiv ID：18270712。网易云音乐有该曲子的两个版本，一个是在专辑内的版本，为 Grad Erlija，封面是专辑封面；另一首是单独的版本，为 Grad Erlija -Retrospektiva-，封面即是该图。" }, { "title": "『I Wanna』 Best Bye To 2016", "url": "/posts/best_bye_2016/", "categories": "游戏, I Wanna", "tags": "游戏, i wanna, gm8", "date": "2021-03-15 12:42:38 +0800", "snippet": "简介2016 年年末和小奏律（Koyuyu）合作开发的基于 I Wanna 的同人游戏，我负责特效实现、BOSS 设计。游戏于 2017 年春节发布。预览下载Delicious Fruit 页面百度网盘下载Media Fire 网盘下载" }, { "title": "记一次 Manjaro 下 Grub 炸裂的问题", "url": "/posts/problem_with_grub/", "categories": "杂记, Linux", "tags": "manjaro, linux", "date": "2021-03-15 00:51:43 +0800", "snippet": "问题的发生最近嫌弃 Ubuntu 实在是太傻逼了，遂卸载换 Manjaro。我原本以为以自己的经验完全不成问题，没想到装好系统后，第二天就打不开了。具体的特征是，开机时电脑一直黑屏，不久后电源指示灯熄灭，电脑重启进入 BIOS 的引导提示界面。以前我遇到过系统进不去、Grub 只有命令行的问题，但是连 Grub 命令行都没有的情况我还是第一次见到。我以为是自己哪里操作有问题，没在意就重装了一次，没想到一番鼓捣之后，这个问题再次出现了！这可得了，我一定要找出问题所在。Live CD刚好我是用 U盘装的 Manjaro，插上 U盘就可以当 Live CD 用，启动 U盘里的 Manjaro。..." }, { "title": "GameMaker 8.0 从入门到入土", "url": "/posts/gamemaker_tutorial/", "categories": "教程, GameMaker 8.0", "tags": "教程, gm8", "date": "2021-03-07 17:10:05 +0800", "snippet": "这是我从2017年开始在 Heabot 论坛编写的一系列关于 GameMaker 8.0 的教程，最早是想写在贴吧，但是贴吧嘛懂得都懂，格式乱+不能二次编辑+吞贴，于是选择了 Heabot 论坛。该教程从 2017 年一直写到 2019 年才完成大部分内容，并且之后也一直有在增加新的内容，涵盖从完全新手入门到精通 GameMaker 8.0 的一切内容，如果对 GameMaker 8.0 有兴趣，或者觉得 GameMaker:Studio 2 太难了想先学个简单的当做跳板，欢迎前来查阅或提出意见：Heabot 原始版本（需要登陆）Github 移植版本（使用 Markdown）" }, { "title": "版本控制工具——git", "url": "/posts/git/", "categories": "教程, Git", "tags": "git, 教程, github", "date": "2020-02-08 00:07:33 +0800", "snippet": "前言本篇最早写于 Heabot，点此处查看 Heabot 版本。版本控制工具如果你和四个同事一起开发一个软件（或游戏），要如何保证每个人都能正确地获得另外四个人修改过的代码？如果一段代码出了问题，如何找到是谁最后修改了这段代码？如果软件（或游戏）突然有一天出现了严重的崩溃，要如何回退到上一个正常的版本？而这就是为什么我们需要版本控制工具。它管理每个人对代码的修改权限，处理不同人代码的合并，跟踪每一行代码的修改历史与修改者，对于合作开发而言是必须的工具。有人会说：那我从来都是单打独斗，就不需要版本控制工具了吧？并非如此。即使单从代码回退这一个功能上来看，任何项目都应当使用版本控制工具。中央..." } ]
